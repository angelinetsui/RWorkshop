a = 10
b = 20
a = b
?c
a = c(1.5, 4, 3)
a
cat(a)
v = c(TRUE, 1, "1")
rt = c(1.5, 4, 3, 2.2, 2.3, 3.5)
# We can then caclulate the sum, mean, standard deviation using the corresponding functions
sum(rt) # Sum
mean(rt) # Average
sd(rt) # Standard deviation
a = c(2, 6, NA, 8)
mean(a)
set.seed()
a = randn(20)
a = rand(20)
a = randnorm(20)
a = rnorm(20)
d2 = rnorm(20)
d1 = rnorm(20)
d2 = rnorm(20)
?rnorm
mean(d1)
mean(d1) mean(d2)
mean(d2)
d1 = rnorm(20) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
set.seed(1)
d1 = rnorm(20) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(1)
d1 = rnorm(20) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(1)
d1 = rnorm(20, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d1
mean(d1)
mean(d2)
set.seed(2)
d1 = rnorm(30, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(2)
d1 = rnorm(30, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 1) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
d1
d2
set.seed(2)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(1)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(3)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
# Set seed for consistency
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
round(mean(d1),2)
d1
?t.test
t.test(d1, d2)
t.test(d1, d2, var.equal = TRUE)
t.test(d1, d2, var.equal = FALSE)
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
t.test(d1, d2, var.equal = FALSE)
t.test(d1, d2, var.equal = TRUE)
t.test(d1,10)
t.test(d1,mu = 10)
d1
mean(d1)
set.seed(4)
d1 = rnorm(20, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
set.seed(2)
d1 = rnorm(20, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
t.test(d1, d2)
t.test(d1,mu = 10)
?lm
# Two-sample t-tests
t.test(d1, d2)
# One sample t-tests
t.test(d1,mu = 10)
d1 = rnorm(30,0,3)
sem(d1)
sem = function(x) {
sd(x,na.rm = T) / sqrt(length(x))
}
d1 = rnorm(30,0,3)
sem(d1)
sd(d1)
sem(d1)
set.seed(2)
d1 = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
t.test(d1, d2)
t.test(d1,mu = 10)
rnorm(mean = 2, sd = 1)
rnorm(1, mean = 2, sd = 1)
d2$post = d1$pre + rnorm(mean = 2, sd = 1)
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d1$pre + rnorm(mean = 2, sd = 1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d2$pre + rnorm(1,mean = 2, sd = 1)
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(mean = 2, sd = 1)
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 2, sd = 1)
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 0.1)
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 1)
d3
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 1)
d3 = as.dataframe(d3)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 1)
d3 = dataframe(d3)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 1)
d3 = as.data.frame(d3)
View(d3)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 1)
d3 = as.data.frame(d3)
View(d3)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(1,mean = 1, sd = 2)
d3 = as.data.frame(d3)
View(d3)
rnorm(1,mean = 1, sd = 2
)
rnorm(1,mean = 1, sd = 2)
View(d3)
d3$post = d3$pre + rnorm(20 ,mean = 1, sd = 2)
View(d3)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 1, sd = 2)
d3 = as.data.frame(d3)
d3
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 0.5, sd = 1)
d3 = as.data.frame(d3)
d3
set.seed(2)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 1, sd = 1)
d3 = as.data.frame(d3)
d3
set.seed(2)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 0.5, sd = 1)
d3 = as.data.frame(d3)
d3
t.test(d3$pre,d3$post, paired = TRUE)
set.seed(2)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 0.5, sd = 1) # add a random number drawn from a normal distribution with mean 0.5 and SD = 1 to simulate a positive effect
d3 = as.data.frame(d3)
t.test(d3$pre,d3$post, paired = TRUE)
set.seed(1)
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 0.5, sd = 1) # add a random number drawn from a normal distribution with mean 0.5 and SD = 1 to simulate a positive effect
d3 = as.data.frame(d3)
t.test(d3$pre,d3$post, paired = TRUE)
View(d3)
# Do this again with a different seed:
set.seed(4)
d1 = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
# Are d1 and d2 significantly different?
t.test(d1, d2)
# Is d1 significantly different from 10?
t.test(d1,mu = 10)
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
d2 = rnorm(30, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
mean(d2)
# Are d1 and d2 significantly different?
t.test(d1, d2)
# Is d1 significantly different from 10?
t.test(d1,mu = 10)
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
# Is d1 significantly different from 10
t.test(d1)
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
# Is d1 significantly different from 10
t.test(d1,mu = 10)
p.values = NULL
# What does each iteration of the for loop do?
for (i in 1:10000 ) {
fake_sample = rnorm(30,10,1)
res1 = t.test(fake_sample,10,mu=10)
p.values[i] = res1$p.value
}
frac_sig = mean(p.values < 0.05)
cat(paste("False Positive Rate ="), frac_sig)
p.values = NULL
# What does each iteration of the for loop do?
for (i in 1:10000 ) {
fake_sample = rnorm(30,10,1)
res1 = t.test(fake_sample,mu=10)
p.values[i] = res1$p.value
}
frac_sig = mean(p.values < 0.05)
cat(paste("False Positive Rate ="), frac_sig)
qplot(p.values)
library(ggplot2)
qplot(p.values)
p.values = NULL
foo = function(n) {
fake_sample = rnorm(n,10,1)
res1 = t.test(fake_sample,mu=10)
res1$p.value < 0.05
}
frac_sig = mean(replicate(10000,foo(30)))
cat(paste("False Positive Rate ="), frac_sig)
?ToothGrowth
set.seed(1)
d3 = NULL
d3$pre = rnorm(20, mean = 10) # draws 20 numbers from a normal distribution with mean = 0, sd = 1;
d3$post = d3$pre + rnorm(20 ,mean = 0.5, sd = 1) # add a random number drawn from a normal distribution with mean 0.5 and SD = 1 to simulate a positive effect
# Make dataframe, and inspect data!
d3 = as.data.frame(d3)
# What does this mean?
t.test(d3$pre,d3$post, paired = TRUE)
# Note that this is also equivalent to a one-sample t-tests of the differences against 0.
t.test(d3$post-d3$pre, mu = 0)
for (i in 1:30 ) {
fake_regress$x[i] = randnorm(68,10)
fake_regress$y[i] = 5.49*fake_sample$x[i] - 222
}
fake_regress$x = rnorm(30,68,10)
fake_regress$y = 5.49*fake_sample$x[i] - 222 + rnorm(30,5,1)
fake_regress$x = rnorm(30,68,10)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = 5.49*fake_sample$x[i] - 222 + rnorm(30,5,1)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = 5.49*fake_sample$x - 222 + rnorm(30,5,1)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = 5.49*fake_sample$x - 222
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = 5.49.*fake_sample$x - 222
fake_regress$y = fake_sample$x * 5.49
fake_regress$y = fake_sample$x .* 5.49
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,5,1)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,5,1)
fake_regress = as.data.frame(fake_regress)
View(fake_regress)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,5,1)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,5,1)
qplot(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,1)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,10)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$x)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,10)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,10)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,20)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
View(fake_regress)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,20)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,20)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,30)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
fake_regress = NULL;
fake_regress$x = rnorm(30,68,10)
fake_regress$y = fake_regress$x * 5.49 - 222 + rnorm(30,50,50)
fake_regress = as.data.frame(fake_regress)
qplot(fake_regress$x,fake_regress$y)
qplot(fake_regress$x,fake_regress$y) + geom_smooth(method='lm')
qplot(fake_regress$x,fake_regress$y) +
geom_line(method='lm',)
qplot(fake_regress$x,fake_regress$y) +
geom_smooth(method='lm)
?geom_smooth
qplot(fake_regress$x,fake_regress$y) +
geom_smooth(method='lm',se = F)
?ToothGrowth # take a quick read to see the details of the dataset.
d4 = ToothGrowth;
d4 = ToothGrowth;
ggplot(d4, aes(x=dose,y=len, color=supp)) +
geom_point() +
geom_smooth(se=F, method="lm")
res1 = lm(len ~ dose + supp, d4);
summary(res1)
res2 = lm(len ~ dose * supp, d4);
summary(res2)
anova(res2,res3)
anova(res1,res2)
knitr::opts_chunk$set(echo = TRUE)
?ToothGrowth # take a quick read to see the details of the dataset.
d4 = ToothGrowth;
ggplot(d4, aes(x=dose,y=len, color=supp)) +
geom_point() +
geom_smooth(se=F, method="lm")
library(ggplot)
library(ggplot2)
d4 = ToothGrowth;
ggplot(d4, aes(x=dose,y=len, color=supp)) +
geom_point() +
geom_smooth(se=F, method="lm")
res1 = lm(len ~ dose + supp, d4);
summary(res1)
res2 = lm(len ~ dose * supp, d4);
summary(res2)
anova(res1,res2)
# Set seed for consistency
set.seed(4)
d1 = rnorm(30, mean = 10) # draws 30 numbers from a normal distribution with mean = 0, sd = 1;
mean(d1)
# Is d1 significantly different from 10
t.test(d1,mu = 10)
p.values = NULL
# What does each iteration of the for loop do?
for (i in 1:10000 ) {
fake_sample = rnorm(30,10,1)
res1 = t.test(fake_sample,mu=10)
p.values[i] = res1$p.value
}
frac_sig = mean(p.values < 0.05)
cat(paste("False Positive Rate ="), frac_sig)
p.values = NULL
foo = function(n) {
fake_sample = rnorm(n,10,1)
res1 = t.test(fake_sample,mu=10)
res1$p.value < 0.05
}
frac_sig = mean(replicate(10000,foo(30)))
cat(paste("False Positive Rate ="), frac_sig)
